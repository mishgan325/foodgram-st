version: '3.3'

volumes:
  pg_data:
  static:
  media:

services:
  db:
    image: postgres:13
    volumes:
      - pg_data:/var/lib/postgresql/data
    env_file: .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  backend:
    image: foodgram-backend
    build: ../backend/
    env_file: .env
    volumes:
      - static:/app/collected_static/
      - media:/app/media/
    depends_on:
      - db
    entrypoint: >
      sh -c "
        python manage.py migrate &&
        python manage.py load_ingredients ingredients.json &&
        echo \"from django.contrib.auth import get_user_model; User = get_user_model(); \
      if not User.objects.filter(email='admin@admin.admin').exists(): User.objects.create_superuser('admin', 'admin@admin.admin', 'admin123', first_name='admin', last_name='admin')\" | python manage.py shell &&
        gunicorn foodgram_backend.wsgi:application --bind 0.0.0.0:8000
      "


  frontend:
    container_name: foodgram-front
    build: ../frontend
    volumes:
      - ../frontend/:/app/result_build/
  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static:/static/
      - media:/media/
